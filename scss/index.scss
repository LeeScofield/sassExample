$nav-color: #F90;
nav {
  $width: 100px;
  width: $width;
  color: $nav-color;
}

$highlight-color: #f90;
.selected{
  border: 1px solid $highlight-color;
}

$link_color:red;
$link-color: blue;
a {
  color: $link_color;
}
/*子类选择器*/
#content {
  article {
    h1 { color: #333 }
    p { margin-bottom: 1.4em }
  }
  aside { background-color: #EEE }
}

#content {
  background-color: #f5f5f5;
  aside { background-color: #eee }
}

/*伪类选择器，&相当于.art，不会有层级关系，编译后会单独作为一个样式输出*/
.art {
  color:blue;
  a {
    color:red;
    &:hover{color:yellow;}
  }
  &:hover{color:green;}
}
article a {
  color: blue;
  &:hover { color: red }
}
/*&编译后会单独作为一个样式输出，替代content aside*/
#content aside {
  color: red;
  body.ie & { color: green }
}

.box{
  width: 100px;
  box-title{width: 80px;}
}
/*群组选择器*/
.container {
  h1, h2, h3 {margin-bottom: .8em}
}

nav, aside {
  a {color: blue}
}

/*>、+和~组合选择器*/
article {
  ~ article { border-top: 1px dashed #ccc }
  > section { background: #eee }
  dl > {
    dt { color: #333 }
    dd { color: #555 }
  }
  nav + & { margin-top: 0 }
}
/*将属性分开*/
nav {
  border: {
    style: solid;
    width: 1px;
    color: #ccc;
  }
}

nav {
  border: 1px solid #ccc {
    left: 0px;
    right: 0px;
  }
}

@import "home";
/*导入的实际名称为_importFile.scss，sass文件名前加上下划线不会编译成css文件，引入时也不需要加下划线*/
@import "importFile";

/*默认值 ，如果有其它引入文件相同变量，会将其覆盖*/
$fontSize:16px !default;


font{
  padding: 9px;
  font-size: $fontSize;
}

/*import嵌套导入*/
aside{
  @import "importFile";
}

body {
  color: #333; // 这种注释内容不会出现在生成的css文件中
  padding: 0; /* 这种注释内容会出现在生成的css文件中 */
}

/*混合器*/
@mixin rounder-corners{
  -moz-border-radius: 5px;
  -webkit-border-radius: 5px;
  border-radius: 5px;
}

notice{
  @include rounder-corners;
}
/*混合器css */
@mixin no-bullets {
  list-style: none;
  li {
    list-style-image: none;
    list-style-type: none;
    margin-left: 0px;
  }
}
ul.plain {
  color: #444;
  @include no-bullets;
}

/*混合器参数传值*/
@mixin link-colors($normal, $hover, $visited) {
  color: $normal;
  &:hover { color: $hover; }
  &:visited { color: $visited; }
}

/*
a {
  @include link-colors(blue, red, green);
}
*/

a {
  @include link-colors(
          $normal: blue,
          $visited: green,
          $hover: red
  );
}
/*继承*/
.error {
  border: 1px solid red;
  background-color: #fdd;
}
/*这里继参后，会将error和seriousError相同属性绑定在同一个组中*/
.seriousError {
  @extend .error;
  border-width: 3px;
}

/*尽量避免使用标签类继承，因为本css页面中所有的a标签属性都会叠加到该样式上*/
.disabled {
  color: gray;
  @extend a;
}

/*if else*/
@mixin backgroundNum($num){
  @if($num == 1){
    background: red;
  }@else if($num == 2){
    background: green;
  }@else{
    background: blue;
  }
}

.test1{
  @include backgroundNum(1);
}
.test2{
  @include backgroundNum(2);
}
.test3{
  @include backgroundNum(3);
}

/*for (from 1 to 3不包含3 from 1 through 3包含 3)*/
@for $i from 1 to 3 {
  .img#{$i}{
    background:url("img/img#{$i}");
  }
}

/*while 这里不能用++或--，$j - 1不能把空格省掉写成$j--，因为这是变量而不是运算*/
$j:2;

@while $j > 0{
  .img_while_#{$j} {
    background: url("img/img#{$j}");
  }
  $j:$j - 1;
}

/*each*/
@each $k in a,b,c{
  .img_each_#{$k} {
    background: url("img/img#{$k}");
  }
}

/*function 函数*/
@function f_raba($r,$g,$b,$a){
  @return rgba($r,$g,$b,$a);
}

.bg{
  background: f_raba(255,255,255,0.5);
}

